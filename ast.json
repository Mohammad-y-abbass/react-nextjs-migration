[
  {
    "type": "file",
    "name": ".gitignore",
    "content": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\npnpm-debug.log*\nlerna-debug.log*\n\nnode_modules\ndist\ndist-ssr\n*.local\n\n# Editor directories and files\n.vscode/*\n!.vscode/extensions.json\n.idea\n.DS_Store\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw?\n"
  },
  {
    "type": "folder",
    "name": "backend",
    "children": [
      {
        "type": "folder",
        "name": "dist",
        "children": [
          {
            "type": "file",
            "name": "index.js",
            "content": "import express from 'express';\nconst app = express();\napp.listen(3000, () => {\n    console.log('Server is running on port 3000');\n});\n"
          }
        ]
      },
      {
        "type": "folder",
        "name": "src",
        "children": [
          {
            "type": "file",
            "name": "index.ts",
            "content": "import express from 'express';\r\n\r\nconst app = express();\r\n\r\napp.listen(3000, () => {\r\n  console.log('Server is running on port 3000');\r\n});\r\n"
          }
        ]
      },
      {
        "type": "file",
        "name": "tsconfig.json",
        "content": "{\r\n  \"compilerOptions\": {\r\n    \"target\": \"ES2020\", // Specify ECMAScript target version\r\n    \"module\": \"ESNext\", // Specify module code generation\r\n    \"rootDir\": \"./src\", // Specify the root directory of input files\r\n    \"outDir\": \"./dist\", // Specify the output directory for compiled files\r\n    \"esModuleInterop\": true, // Enables emit interoperability between CommonJS and ES Modules\r\n    \"forceConsistentCasingInFileNames\": true, // Disallow inconsistently-cased references to the same file\r\n    \"strict\": true, // Enable all strict type-checking options\r\n    \"skipLibCheck\": true // Skip type checking of all declaration files\r\n  },\r\n  \"include\": [\"src\"], // Include all TypeScript files in the src directory\r\n  \"exclude\": [\"node_modules\", \"dist\"] // Exclude the node_modules and dist directories\r\n}\r\n"
      }
    ]
  },
  {
    "type": "folder",
    "name": "frontend",
    "children": [
      {
        "type": "file",
        "name": ".eslintrc.cjs",
        "content": "module.exports = {\n  root: true,\n  env: { browser: true, es2020: true },\n  extends: [\n    'eslint:recommended',\n    'plugin:@typescript-eslint/recommended',\n    'plugin:react-hooks/recommended',\n  ],\n  ignorePatterns: ['dist', '.eslintrc.cjs'],\n  parser: '@typescript-eslint/parser',\n  plugins: ['react-refresh'],\n  rules: {\n    'react-refresh/only-export-components': [\n      'warn',\n      { allowConstantExport: true },\n    ],\n  },\n}\n"
      },
      {
        "type": "file",
        "name": "index.html",
        "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&family=Open+Sans:wght@400;600&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <title>Vite + React + TS</title>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/main.tsx\"></script>\n  </body>\n</html>\n"
      },
      {
        "type": "file",
        "name": "postcss.config.js",
        "content": "export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n"
      },
      {
        "type": "folder",
        "name": "public",
        "children": []
      },
      {
        "type": "folder",
        "name": "src",
        "children": [
          {
            "type": "file",
            "name": "App.tsx",
            "content": "import { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport {\n  Route,\n  RouterProvider,\n  createBrowserRouter,\n  createRoutesFromElements,\n} from 'react-router-dom';\nimport Build from './pages/Build';\nimport Canvas from './pages/Canvas';\nimport Editor from './pages/Editor';\n\nconst router = createBrowserRouter(\n  createRoutesFromElements(\n    <Route path='build' element={<Build />}>\n      <Route path='canvas' element={<Canvas />} />\n      <Route path='editor' element={<Editor />} />\n    </Route>\n  )\n);\n\nconst App = () => {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <RouterProvider router={router} />\n    </DndProvider>\n  );\n};\n\nexport default App;\n"
          },
          {
            "type": "folder",
            "name": "components",
            "children": [
              {
                "type": "folder",
                "name": "canvas",
                "children": [
                  {
                    "type": "file",
                    "name": "CanvasView.tsx",
                    "content": "import React, { useState } from 'react';\r\nimport { useDrop, DropTargetMonitor, useDrag } from 'react-dnd';\r\nimport { ToolboxComponentProps } from '../../types';\r\n\r\ninterface DroppedComponent extends ToolboxComponentProps {\r\n  position: { x: number; y: number };\r\n}\r\n\r\nconst CanvasView: React.FC = () => {\r\n  const [droppedComponents, setDroppedComponents] = useState<\r\n    DroppedComponent[]\r\n  >([]);\r\n\r\n  const [, drop] = useDrop(() => ({\r\n    accept: 'ToolboxComponent',\r\n    drop: (item: ToolboxComponentProps, monitor: DropTargetMonitor) => {\r\n      const offset = monitor.getSourceClientOffset();\r\n      if (offset) {\r\n        const { x, y } = offset;\r\n        addComponentToCanvas(item, x, y);\r\n      }\r\n    },\r\n  }));\r\n\r\n  const [, drag] = useDrag(() => ({\r\n    type: 'ToolboxComponent',\r\n    item: { id, name, code },\r\n  }));\r\n\r\n  const addComponentToCanvas = (\r\n    component: ToolboxComponentProps,\r\n    x: number,\r\n    y: number\r\n  ) => {\r\n    setDroppedComponents((prevDroppedComponents) => [\r\n      ...prevDroppedComponents,\r\n      { ...component, position: { x, y } },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='relative flex-1 h-full p-4 bg-white border-l border-gray-400'\r\n      ref={drop}\r\n    >\r\n      {droppedComponents.map((component: DroppedComponent, index: number) => (\r\n        <div\r\n          ref={drag}\r\n          key={index}\r\n          style={{\r\n            position: 'relative',\r\n            left: component.position.x - 150,\r\n            top: component.position.y - 50,\r\n            backgroundColor: 'red',\r\n            width: 'fit-content',\r\n          }}\r\n        >\r\n          {component.code({})}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CanvasView;\r\n"
                  },
                  {
                    "type": "file",
                    "name": "ToolBox.tsx",
                    "content": "// ToolBox.tsx\r\nimport toolboxComponents from '../../utils/toolboxComponents';\r\nimport { ToolboxComponentProps } from '../../types';\r\nimport ToolboxComponent from './ToolboxComponent';\r\n\r\nconst ToolBox: React.FC = () => {\r\n  return (\r\n    <div className='flex flex-col w-48 overflow-y-scroll text-center border-r border-gray-400 text-light scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-gray-800'>\r\n      {toolboxComponents.map((component: ToolboxComponentProps) => (\r\n        <ToolboxComponent key={component.id} {...component} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToolBox;\r\n"
                  },
                  {
                    "type": "file",
                    "name": "ToolboxComponent.tsx",
                    "content": "import { ToolboxComponentProps } from '../../types';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nconst ToolboxComponent: React.FC<ToolboxComponentProps> = ({\r\n  id,\r\n  name,\r\n  code,\r\n}) => {\r\n  const [, drag] = useDrag(() => ({\r\n    type: 'ToolboxComponent',\r\n    item: { id, name, code },\r\n  }));\r\n\r\n  return (\r\n    <span className='block py-2 border-b-2 border-gray-400' ref={drag}>\r\n      {name}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ToolboxComponent;\r\n"
                  }
                ]
              },
              {
                "type": "folder",
                "name": "editor",
                "children": [
                  {
                    "type": "file",
                    "name": "CodeEditor.tsx",
                    "content": "import Editor from '@monaco-editor/react';\r\n\r\nfunction CodeEditor() {\r\n  return (\r\n    <Editor\r\n      height='100vh'\r\n      defaultLanguage='javascript'\r\n      defaultValue='// some comment'\r\n      theme='vs-dark'\r\n    />\r\n  );\r\n}\r\n\r\nexport default CodeEditor;\r\n"
                  }
                ]
              },
              {
                "type": "folder",
                "name": "fileExplorer",
                "children": [
                  {
                    "type": "file",
                    "name": "FileExplorer.tsx",
                    "content": "const FileExplorer = () => {\r\n  return (\r\n    <aside className='min-h-screen p-4 text-white'>\r\n      <nav>\r\n        <ul className='space-y-2'>\r\n          <li className='opcion-con-desplegable'>\r\n            <div className='flex items-center justify-between p-2 hover:bg-gray-700'>\r\n              <div className='flex items-center'>\r\n                <i className='mr-2 fas fa-calendar-alt'></i>\r\n                <span>Agenda</span>\r\n              </div>\r\n              <i className='text-xs fas fa-chevron-down'></i>\r\n            </div>\r\n            <ul className='hidden ml-4 desplegable'>\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='items-center block p-2 hover:bg-gray-700'\r\n                >\r\n                  <i className='mr-2 text-xs fas fa-chevron-right'></i>\r\n                  Gestion de citas\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='items-center block p-2 hover:bg-gray-700'\r\n                >\r\n                  <i className='mr-2 text-xs fas fa-chevron-right'></i>\r\n                  Polizas\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className='opcion-con-desplegable'>\r\n            <div className='flex items-center justify-between p-2 hover:bg-gray-700'>\r\n              <div className='flex items-center'>\r\n                <i className='mr-2 fas fa-money-bill-wave'></i>\r\n                <span>Contabilidad</span>\r\n              </div>\r\n              <i className='text-xs fas fa-chevron-down'></i>\r\n            </div>\r\n            <ul className='hidden ml-4 desplegable'>\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='items-center block p-2 hover:bg-gray-700'\r\n                >\r\n                  <i className='mr-2 text-xs fas fa-chevron-right'></i>\r\n                  Tratamientos\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='items-center block p-2 hover:bg-gray-700'\r\n                >\r\n                  <i className='mr-2 text-xs fas fa-chevron-right'></i>\r\n                  Gastos\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='items-center block p-2 hover:bg-gray-700'\r\n                >\r\n                  <i className='mr-2 text-xs fas fa-chevron-right'></i>\r\n                  Facturas\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className='opcion-con-desplegable'>\r\n            <div className='flex items-center justify-between p-2 hover:bg-gray-700'>\r\n              <div className='flex items-center'>\r\n                <i className='mr-2 fas fa-chart-bar'></i>\r\n                <span>Informes</span>\r\n              </div>\r\n              <i className='text-xs fas fa-chevron-down'></i>\r\n            </div>\r\n            <ul className='hidden ml-4 desplegable'>\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='items-center block p-2 hover:bg-gray-700'\r\n                >\r\n                  <i className='mr-2 text-xs fas fa-chevron-right'></i>\r\n                  Presupuestos\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='items-center block p-2 hover:bg-gray-700'\r\n                >\r\n                  <i className='mr-2 text-xs fas fa-chevron-right'></i>\r\n                  Informe médico\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li className='opcion-con-desplegable'>\r\n            <div className='flex items-center justify-between p-2 hover:bg-gray-700'>\r\n              <div className='flex items-center'>\r\n                <i className='mr-2 fas fa-file-alt'></i>\r\n                <span>Documentación</span>\r\n              </div>\r\n              <i className='text-xs fas fa-chevron-down'></i>\r\n            </div>\r\n            <ul className='hidden ml-4 desplegable'>\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='items-center block p-2 hover:bg-gray-700'\r\n                >\r\n                  <i className='mr-2 text-xs fas fa-chevron-right'></i>\r\n                  Firmas pendientes\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href='#'\r\n                  className='items-center block p-2 hover:bg-gray-700'\r\n                >\r\n                  <i className='mr-2 text-xs fas fa-chevron-right'></i>\r\n                  Documentos\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          {/* Add more navigation links as needed */}\r\n        </ul>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default FileExplorer;\r\n"
                  }
                ]
              },
              {
                "type": "folder",
                "name": "shared",
                "children": [
                  {
                    "type": "file",
                    "name": "BuildTabs.tsx",
                    "content": "import { Link } from 'react-router-dom';\r\nconst BuildTabs = () => {\r\n  return (\r\n    <ul\r\n      id='tabs'\r\n      className='inline-flex w-full px-1 pt-2 border-b-2 h-4rem bg-dark'\r\n    >\r\n      <li className='px-4 py-2 -mb-px font-semibold rounded-t opacity-50 text-light'>\r\n        <Link id='default-tab' to='/build/canvas'>\r\n          Canvas\r\n        </Link>\r\n      </li>\r\n      <li className='px-4 py-2 font-semibold rounded-t opacity-50 text-light'>\r\n        <Link to='/build/editor'>Editor</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default BuildTabs;\r\n"
                  },
                  {
                    "type": "file",
                    "name": "Header.tsx",
                    "content": "import { Link } from 'react-router-dom';\r\nimport { navIems } from '../../utils/header';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <nav\r\n      className={`${\r\n        location.pathname === '/build' ? 'hidden' : 'flex'\r\n      } justify-around w-full py-4 shadow-md bg-white/80 backdrop-blur-md`}\r\n    >\r\n      <div className='flex items-center'>\r\n        <Link to='/' className='cursor-pointer'>\r\n          <h3 className='text-2xl font-medium text-blue-500'>MO</h3>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className='items-center hidden space-x-8 lg:flex'>\r\n        {navIems.map((item) => (\r\n          <Link\r\n            key={item.id}\r\n            to={item.link}\r\n            className='text-gray-600 transition-colors duration-300 cursor-pointer hover:text-blue-500'\r\n          >\r\n            {item.name}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n\r\n      <div className='flex items-center space-x-5'>\r\n        <Link\r\n          to='/register'\r\n          className='flex text-gray-600 transition-colors duration-300 cursor-pointer hover:text-blue-500'\r\n        >\r\n          <svg\r\n            className='fill-current h-5 w-5 mr-2 mt-0.5'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            xmlnsXlink='http://www.w3.org/1999/xlink'\r\n            version='1.1'\r\n            width='24'\r\n            height='24'\r\n            viewBox='0 0 24 24'\r\n          >\r\n            <path d='M12 0L11.34 .03L15.15 3.84L16.5 2.5C19.75 4.07 22.09 7.24 22.45 11H23.95C23.44 4.84 18.29 0 12 0M12 4C10.07 4 8.5 5.57 8.5 7.5C8.5 9.43 10.07 11 12 11C13.93 11 15.5 9.43 15.5 7.5C15.5 5.57 13.93 4 12 4M12 6C12.83 6 13.5 6.67 13.5 7.5C13.5 8.33 12.83 9 12 9C11.17 9 10.5 8.33 10.5 7.5C10.5 6.67 11.17 6 12 6M.05 13C.56 19.16 5.71 24 12 24L12.66 23.97L8.85 20.16L7.5 21.5C4.25 19.94 1.91 16.76 1.55 13H.05M12 13C8.13 13 5 14.57 5 16.5V18H19V16.5C19 14.57 15.87 13 12 13M12 15C14.11 15 15.61 15.53 16.39 16H7.61C8.39 15.53 9.89 15 12 15Z' />\r\n          </svg>\r\n          Register\r\n        </Link>\r\n\r\n        <Link\r\n          to='/login'\r\n          className='flex font-semibold text-gray-600 transition-colors duration-300 cursor-pointer hover:text-blue-600'\r\n        >\r\n          <svg\r\n            className='fill-current h-5 w-5 mr-2 mt-0.5'\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            xmlnsXlink='http://www.w3.org/1999/xlink'\r\n            version='1.1'\r\n            width='24'\r\n            height='24'\r\n            viewBox='0 0 24 24'\r\n          >\r\n            <path d='M10,17V14H3V10H10V7L15,12L10,17M10,2H19A2,2 0 0,1 21,4V20A2,2 0 0,1 19,22H10A2,2 0 0,1 8,20V18H10V20H19V4H10V6H8V4A2,2 0 0,1 10,2Z' />\r\n          </svg>\r\n          Login\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"
                  }
                ]
              },
              {
                "type": "folder",
                "name": "toolbox",
                "children": [
                  {
                    "type": "file",
                    "name": "Toolbox.tsx",
                    "content": "import toolboxComponents from '../../utils/toolboxComponents';\r\n\r\nconst Toolbox = () => {\r\n  return (\r\n    <div className='bg-dark text-light p-2 overflow-auto'>\r\n      <h2 className='text-center mb-2 text-sm'>Components</h2>\r\n      <ul className='flex flex-col gap-2'>\r\n        {toolboxComponents.map((component) => (\r\n          <li key={component.id}>\r\n            <button className='p-2 rounded-md bg-gray-700 hover:bg-gray-800 w-full text-xs'>\r\n              {component.name}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbox;\r\n"
                  }
                ]
              }
            ]
          },
          {
            "type": "file",
            "name": "index.css",
            "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n"
          },
          {
            "type": "file",
            "name": "main.tsx",
            "content": "import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n"
          },
          {
            "type": "folder",
            "name": "pages",
            "children": [
              {
                "type": "file",
                "name": "Build.tsx",
                "content": "import { Outlet } from 'react-router-dom';\r\nimport BuildTabs from '../components/shared/BuildTabs';\r\n\r\nconst Build = () => {\r\n  return (\r\n    <div className='flex flex-col w-full max-h-screen bg-dark'>\r\n      <BuildTabs />\r\n      <main className='flex flex-grow w-full overflow-hidden'>\r\n        <Outlet />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Build;\r\n"
              },
              {
                "type": "file",
                "name": "Canvas.tsx",
                "content": "import CanvasView from '../components/canvas/CanvasView';\r\nimport ToolBox from '../components/canvas/ToolBox';\r\n\r\nconst Canvas: React.FC = () => {\r\n  return (\r\n    <div className='flex w-full h-screen'>\r\n      <ToolBox />\r\n      <CanvasView />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n"
              },
              {
                "type": "file",
                "name": "Editor.tsx",
                "content": "import CodeEditor from '../components/editor/CodeEditor';\r\nimport FileExplorer from '../components/fileExplorer/FileExplorer';\r\n\r\nconst Editor = () => {\r\n  return (\r\n    <div className='grid w-full grid-cols-editor-layout'>\r\n      <FileExplorer />\r\n      <CodeEditor />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n"
              },
              {
                "type": "file",
                "name": "Home.tsx",
                "content": "const Home = () => {\r\n  return (\r\n    <div>\r\n      <h1 className='text-dark'>THIS IS THE HOME PAGE</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"
              }
            ]
          },
          {
            "type": "file",
            "name": "types.d.ts",
            "content": "export interface ToolboxComponentProps {\r\n  id: string;\r\n  name: string;\r\n  code: React.FC;\r\n}\r\n"
          },
          {
            "type": "folder",
            "name": "utils",
            "children": [
              {
                "type": "file",
                "name": "fileExplorer.ts",
                "content": ""
              },
              {
                "type": "file",
                "name": "header.ts",
                "content": "export const navIems = [\r\n  {\r\n    id: 1,\r\n    name: 'Home',\r\n    link: '/',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'About',\r\n    link: '/about',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'build',\r\n    link: '/build',\r\n  },\r\n];\r\n"
              },
              {
                "type": "file",
                "name": "toolboxComponents.tsx",
                "content": "import React from 'react';\r\n\r\nconst ButtonComponent: React.FC = () => {\r\n  return <button>Button</button>;\r\n};\r\n\r\nconst InputComponent: React.FC = () => {\r\n  return <input type='text' placeholder='this is an input' />;\r\n};\r\n\r\nconst toolboxComponents = [\r\n  {\r\n    id: 'button',\r\n    name: 'Button',\r\n    code: ButtonComponent,\r\n  },\r\n  {\r\n    id: 'input',\r\n    name: 'Input',\r\n    code: InputComponent,\r\n  },\r\n];\r\n\r\nexport default toolboxComponents;\r\n"
              }
            ]
          },
          {
            "type": "file",
            "name": "vite-env.d.ts",
            "content": "/// <reference types=\"vite/client\" />\n"
          }
        ]
      },
      {
        "type": "file",
        "name": "tailwind.config.js",
        "content": "/** @type {import('tailwindcss').Config} */\n\nimport tailwindScrollbar from 'tailwind-scrollbar';\nexport default {\n  content: ['./src/**/*.{js,jsx,ts,tsx}'],\n  darkMode: 'class', // Enable dark mode variants\n  theme: {\n    extend: {\n      colors: {\n        dark: '#04455C', // Dark background color\n        light: '#CCCCCC', // Light text color\n        accent: '#3498db', // Accent color\n      },\n      gridTemplateColumns: {\n        'editor-layout': '1fr 6fr',\n      },\n      fontFamily: {\n        sans: ['Roboto', 'sans-serif'], // Default font family\n      },\n    },\n  },\n  plugins: [tailwindScrollbar],\n};\n"
      },
      {
        "type": "file",
        "name": "tsconfig.app.json",
        "content": "{\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"tsBuildInfoFile\": \"./node_modules/.tmp/tsconfig.app.tsbuildinfo\",\n    \"target\": \"ES2020\",\n    \"useDefineForClassFields\": true,\n    \"lib\": [\"ES2020\", \"DOM\", \"DOM.Iterable\"],\n    \"module\": \"ESNext\",\n    \"skipLibCheck\": true,\n\n    /* Bundler mode */\n    \"moduleResolution\": \"bundler\",\n    \"allowImportingTsExtensions\": true,\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"moduleDetection\": \"force\",\n    \"noEmit\": true,\n    \"jsx\": \"react-jsx\",\n\n    /* Linting */\n    \"strict\": true,\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"noFallthroughCasesInSwitch\": true\n  },\n  \"include\": [\"src\"]\n}\n"
      },
      {
        "type": "file",
        "name": "tsconfig.json",
        "content": "{\n  \"files\": [],\n  \"references\": [\n    {\n      \"path\": \"./tsconfig.app.json\"\n    },\n    {\n      \"path\": \"./tsconfig.node.json\"\n    }\n  ]\n}\n"
      },
      {
        "type": "file",
        "name": "tsconfig.node.json",
        "content": "{\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"tsBuildInfoFile\": \"./node_modules/.tmp/tsconfig.node.tsbuildinfo\",\n    \"skipLibCheck\": true,\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"bundler\",\n    \"allowSyntheticDefaultImports\": true,\n    \"strict\": true,\n    \"noEmit\": true\n  },\n  \"include\": [\"vite.config.ts\"]\n}\n"
      },
      {
        "type": "file",
        "name": "vite.config.ts",
        "content": "import { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [react()],\n})\n"
      }
    ]
  },
  {
    "type": "file",
    "name": "README.md",
    "content": "# mo-platform\n"
  }
]